{"ast":null,"code":"\n\n/*\nimport React from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { BrowserRouter, Routes, Route, Navigate, useNavigate } from 'react-router-dom';\n\nfunction LoginPage() {\n  const { loginWithRedirect, isAuthenticated, isLoading, user } = useAuth0();\n  const navigate = useNavigate();\n\n  React.useEffect(() => {\n    if (!isLoading && isAuthenticated) {\n      navigate('/dashboard');\n    }\n  }, [isLoading, isAuthenticated, navigate]);\n\n  if (isLoading) return <div>Loading...</div>;\n  if (isAuthenticated) return null;\n\n  console.log(\"Loading:\", isLoading, \"Authenticated:\", isAuthenticated, \"User:\", user); //hiihihi\n\n  return (\n    <div>\n      <h1>Please log in</h1>\n      <button onClick={() => loginWithRedirect()}>Log In</button>\n    </div>\n  );\n}\n\nfunction Dashboard() {\n  const { logout, isAuthenticated, isLoading } = useAuth0();\n\n  if (isLoading) return <div>Loading...</div>;\n  if (!isAuthenticated) return <Navigate to=\"/\" replace />;\n\n  return (\n    <div>\n      <h1>You logged in!</h1>\n      <button onClick={() => logout({ returnTo: window.location.origin })}>Log Out</button>\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<LoginPage />} />\n        <Route path=\"/dashboard\" element={<Dashboard />} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n*/","map":{"version":3,"names":[],"sources":["/Users/ciqbian/Downloads/auth0-fullstack-demo/frontend/src/App.js"],"sourcesContent":["\n\n\n/*\nimport React from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { BrowserRouter, Routes, Route, Navigate, useNavigate } from 'react-router-dom';\n\nfunction LoginPage() {\n  const { loginWithRedirect, isAuthenticated, isLoading, user } = useAuth0();\n  const navigate = useNavigate();\n\n  React.useEffect(() => {\n    if (!isLoading && isAuthenticated) {\n      navigate('/dashboard');\n    }\n  }, [isLoading, isAuthenticated, navigate]);\n\n  if (isLoading) return <div>Loading...</div>;\n  if (isAuthenticated) return null;\n\n  console.log(\"Loading:\", isLoading, \"Authenticated:\", isAuthenticated, \"User:\", user); //hiihihi\n\n  return (\n    <div>\n      <h1>Please log in</h1>\n      <button onClick={() => loginWithRedirect()}>Log In</button>\n    </div>\n  );\n}\n\nfunction Dashboard() {\n  const { logout, isAuthenticated, isLoading } = useAuth0();\n\n  if (isLoading) return <div>Loading...</div>;\n  if (!isAuthenticated) return <Navigate to=\"/\" replace />;\n\n  return (\n    <div>\n      <h1>You logged in!</h1>\n      <button onClick={() => logout({ returnTo: window.location.origin })}>Log Out</button>\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<LoginPage />} />\n        <Route path=\"/dashboard\" element={<Dashboard />} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n*/"],"mappings":";;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}